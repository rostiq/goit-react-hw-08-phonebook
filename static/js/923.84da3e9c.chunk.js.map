{"version":3,"file":"static/js/923.84da3e9c.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Box/Box.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/contacts.selectors.js","pages/Contacts/Contacts.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, TextField } from '@mui/material';\n\n\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n        padding: '1rem',\n        borderRadius: '8px',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        name=\"name\"\n        label=\"name\"\n        variant=\"outlined\"\n        value={name}\n        onChange={handleChange}\n      />\n      <TextField\n        name=\"number\"\n        label=\"number\"\n        variant=\"outlined\"\n        value={number}\n        onChange={handleChange}\n        style={{ marginTop: '1rem' }}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        style={{ marginTop: '1rem' }}\n      >\n        Add new contact\n      </Button>\n    </form>\n  );\n\n}\n\nContactForm.prototypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n\n\n\n","import PropTypes from 'prop-types';\nimport { experimentalStyled as styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport { Button, Typography } from '@mui/material';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: '#fff',\n  padding: '1rem',\n  margin: '1rem',\n  width: '20rem',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n}));\n\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <Box>\n      <Box sx={{display:'flex', flexWrap:'wrap'}}>\n      {contacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <Typography>\n              {name}, {number}\n            </Typography>\n            <Button type=\"button\" onClick={() => onRemoveContact(id)} >\n              del\n            </Button>\n        </Item>\n      ))}\n      </Box>\n    </Box>\n  )\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import { Box, Input } from '@mui/material';\nimport React from 'react';\n\n\nconst Filter = ({ value, onChange }) => (\n  <Box sx={{ml:'2rem',}}>\n      <Input\n        placeholder='search'\n        type=\"name\"\n        value={value}\n        onChange={onChange}\n      />\n  </Box>\n);\n\nexport default Filter;","export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const filteredContacts = state => {\n  const contacts = selectContacts(state);\n\n  const filtered = selectFilter(state);\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filtered)\n  );\n};\n","\nimport { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport ContactForm from \"components/ContactForm\";\nimport ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addContact, deleteContact, fetchContacts } from \"redux/contacts.operations\";\nimport { filteredContacts, selectFilter, selectIsLoading } from \"redux/contacts.selectors\";\nimport { FILTER } from \"redux/contacts.slice\";\n\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const filtered = useSelector(selectFilter);\n    const contacts = useSelector(filteredContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const handleAddContact = (name, number) => {\n        if (contacts.find(contact => contact.name === name)) {\n            alert(`${name} is already in contacts.`);\n            return;\n        }\n        const newContact = {\n            id: nanoid(),\n            name,\n            number,\n        };\n        dispatch(addContact(newContact));\n    }\n\n    const handleRemoveContact = contactId => {\n        dispatch(deleteContact(contactId));\n    };\n\n    const handleChangeFilter = event => {\n        dispatch(FILTER(event.target.value));\n    };\n\n    return (\n        <>\n            <Box sx={{ mt: '1rem', display: 'flex' }}>\n                <Box sx={{\n\n                }}>\n                    <Typography sx={{ ml: '2rem' }}>You have {isLoading ? 'loading' : contacts.length}\n                        {contacts.length === 1 ? ' contact' : ' contacts'}\n                    </Typography>\n                    <Filter value={filtered} onChange={handleChangeFilter} />\n                    <Box>\n                        <ContactForm onSubmit={handleAddContact} />\n                    </Box>\n                </Box>\n                <Box>\n                    {contacts.length === 0 ?\n                        'you have no contacts yet'\n                        :\n                        <ContactList\n                            contacts={contacts}\n                            onRemoveContact={handleRemoveContact}\n                        />\n                    }\n                </Box>\n            </Box>\n        </>\n    );\n}\n\nexport default Contacts;\n\n\n\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["createBox","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","resetForm","style","display","flexDirection","backgroundColor","padding","borderRadius","e","preventDefault","TextField","label","variant","onChange","marginTop","Button","color","type","prototypes","PropTypes","Item","styled","Paper","theme","margin","width","alignItems","justifyContent","contacts","onRemoveContact","sx","flexWrap","map","id","Typography","onClick","ml","Input","placeholder","selectFilter","state","filter","selectIsLoading","isLoading","filteredContacts","items","selectContacts","filtered","contact","toLowerCase","includes","dispatch","useDispatch","useSelector","useEffect","fetchContacts","mt","length","FILTER","find","alert","newContact","nanoid","addContact","contactId","deleteContact","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}